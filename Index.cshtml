@{
    ViewData["Title"] = "Home Page";
}
<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.3/css/bootstrap.min.css" rel="stylesheet">
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.3/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div class="d-flex justify-content-center align-items-center marjin" >
    <div class="shadow-lg w-75 h-75">
        <div class="text-center">
            <p class="mt-5 fw-lighter me-5 ms-5 lightText">Please provide a detailed inquiry with your specific needs so we can easily connect you with suppliers.</p>
            <div class="container w-50 mt-4">
                <div class="d-flex justify-content-between">
                    <div class="tracker-bar bar-1 flex-fill"></div>
                    <div class="tracker-bar bar-2 flex-fill"></div>
                    <div class="tracker-bar bar-3 flex-fill"></div>
                    <div class="tracker-bar bar-4 flex-fill"></div>
                </div>
            </div>

            <div class="container mt-5">
                <p class="text-start headText ms-1">Request Details</p>
            </div>
            <div class="container text-start">
                <div class="container">
                    <div class="row d-flex justify-content-center justify-content-md-start">
                        <div class="d-none d-md-block col-md-4 fontColor2">
                            Item Description
                        </div>
                        <div class="col-12 col-md-2 d-md-block d-none fontColor2">
                            QTY
                        </div>
                        <div class="col-12 col-md-2  d-md-block d-none fontColor2">
                            Rate
                        </div>
                        <div class="col-12 col-md-2 d-md-block d-none fontColor2">
                            Amount
                        </div> 
                        <div class="col-12 col-md-2 d-md-block d-none fw-semibold lightText2">
                            Remove
                        </div>
                    </div>
                    <!-- Container for dynamic items -->
                    <div id="itemList" class="overflow-auto hayt" style="max-height: 200px;">
                        <!-- Dynamic items will be appended here -->
                    </div>
                </div>

                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-plus me-2 addIcon" id="addItemBtn"></i>
                        <p class="mb-0 addItem">Add Item</p>
                    </div>
                    <p class="mb-0 clear" id="clearAllBtn">Clear All</p>
                </div>
            <div class="modal fade" id="itemModal" tabindex="-1" aria-labelledby="itemModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="itemModalLabel">Add Item</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="itemForm">
                                <div class="mb-3">
                                    <label for="itemDescription" class="form-label">Item Description</label>
                                    <input type="text" class="form-control" id="itemDescription" required>
                                </div>
                                <div class="mb-3">
                                    <label for="itemQty" class="form-label">QTY</label>
                                    <input type="number" class="form-control" id="itemQty" required>
                                </div>
                                <div class="mb-3">
                                    <label for="itemRate" class="form-label">Rate</label>
                                    <input type="number" step="0.01" class="form-control" id="itemRate" required>
                                </div>
                                <div class="mb-3">
                                    <label for="itemAmount" class="form-label">Amount</label>
                                    <input type="number" step="0.01" class="form-control" id="itemAmount" required>
                                </div>
                                <input type="hidden" id="itemIndex">
                                <button type="submit" class="btn btn-primary">Save Item</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <div class="container d-flex justify-content-center mt-3 mb-5">
                <a class="" asp-area="" asp-controller="Home" asp-action="Form2">
                    <button class="btn btn-color text-white fs-xsmall custom-btn-size2" id="nextStep">Next</button>
                </a>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Retrieve current step from localStorage
        let currentStep = parseInt(localStorage.getItem('currentStep')) || 1;

        // Apply the 'active' class to the appropriate bars on load
        for (let i = 1; i <= currentStep; i++) {
            document.querySelector(`.bar-${i}`).classList.add('active');
        }

        // Function to navigate to the next page after animation
        function navigateTo(url) {
            setTimeout(function () {
                window.location.href = url;
            }, 50000); // Adjust delay to match the transition duration
        }

        // Add event listener for 'Next' button
        document.getElementById('nextStep').addEventListener('click', function () {
            if (currentStep < 4) {
                document.querySelector(`.bar-${currentStep}`).classList.add('active');
                currentStep++;
                localStorage.setItem('currentStep', currentStep);

                // Navigate to the next page after animation
                navigateTo('@Url.Action("Form2", "Home")');
            }
        });
    });

    //CRUD OPERATIONS
        let itemCount = 0; // Track the number of items

        document.addEventListener('DOMContentLoaded', function () {
            // Handle Add Item button click
            document.getElementById('addItemBtn').addEventListener('click', function () {
                addItem();
            });

            // Handle Clear All button click
            document.getElementById('clearAllBtn').addEventListener('click', function () {
                document.getElementById('itemList').innerHTML = ''; // Clear all items
            });
        });

        function addItem() {
            const itemList = document.getElementById('itemList');

            // Create a new item row
            const newItem = document.createElement('div');
            newItem.className = 'row item-row mt-1';
            newItem.innerHTML = `
                            <div class="d-block d-md-none col-6 fontColor2 mt-md-0 mt-1">
                                  Item Description
                            </div>
                            <div class="col-6 col-md-4 fontColor2 mt-md-0 mt-1">
                                  <input type="text" class="form-control textFIELD rounded-0" placeholder="Enter item name/Item Description">
                            </div>

                            <div class="d-block d-md-none col-6 fontColor2 mt-md-0 mt-1">
                                 QTY
                            </div>
                            <div class="col-6 col-md-2 fontColor2 mt-md-0 mt-1">
                                 <input type="number" class="form-control textFIELD rounded-0" placeholder="Quantity">
                            </div>

                            <div class="d-block d-md-none col-6 fontColor2 mt-md-0 mt-1">
                                 Rate
                            </div>
                            <div class="col-6 col-md-2 fontColor2 mt-md-0 mt-1">
                                 <input type="number" class="form-control textFIELD rounded-0" placeholder="Rate">
                            </div>

                            <div class="d-block d-md-none col-6 fontColor2 mt-md-0 mt-1">
                                 Amount
                            </div>
                            <div class="col-6 col-md-2 fontColor2 mt-md-0 mt-1">
                                 <input type="number" class="form-control textFIELD rounded-0" placeholder="Amount">
                            </div>

                            <div class="d-block d-md-none col-6 fontColor2 mt-md-0 mt-1">
                                 Remove
                            </div>
                            <div class="col-6 col-md-2  d-flex justify-content-evenly mt-md-0 mt-1">
                                <button class="icon" onclick="editItem(this)"><i class="fa-solid fa-pen icon2"></i></button>
                                <button class="icon" onclick="deleteItem(this)"><i class="fa-solid fa-x icon2"></i></button>
                            </div>
                        
                    `;
            itemList.appendChild(newItem);

            itemCount++;
        }

        function editItem(button) {
            const row = button.closest('.item-row');
            const inputs = row.querySelectorAll('input');

            // Toggle between edit and save mode
            const editIcon = '<i class="fa-solid fa-pen icon2"></i>';
            const saveIcon = '<i class="fa-solid fa-floppy-disk icon2"></i>'; // Save icon

            // Assuming 'button' is your target button element
            if (button.innerHTML.trim() === editIcon) {
                button.innerHTML = saveIcon;
                inputs.forEach(input => input.disabled = false);
            } else {
                button.innerHTML = editIcon;
                inputs.forEach(input => input.disabled = true);
            }
        }

        function deleteItem(button) {
            const row = button.closest('.item-row');
            row.remove(); // Remove the item row
        }
</script>
